name: Model training with Live Metrics in Studio
on:
  workflow_dispatch:
  pull_request:
jobs:
  train:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Restore python virtual environment
        uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv
        with:
          requirement_files: requirements.txt
      
      - name: Restore pip download cache
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
        uses: syphar/restore-pip-download-cache@v1

      - name: Install python dependencies
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
        run: pip install --upgrade --upgrade-strategy eager -r requirements.txt

      # - name: Cache/restore pip packages from virtual environment
      #   id: cache-pip
      #   uses: actions/cache@v3
      #   with:
      #     path: venv
      #     key: pip-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}

      # - name: Install python dependencies
      #   if: steps.cache-pip.outputs.cache-hit != 'true'
      #   run: |
      #     if [ -d "venv" ]; then rm -rf venv; fi
      #     python3 -m venv venv
      #     venv/bin/python -m pip install --upgrade --upgrade-strategy eager -r requirements.txt

      - name: Setup node.js
        id: setup-nodejs
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install node.js dependencies
        if: steps.setup-nodejs.outputs.cache-hit != 'true'
        run: npm ci

      - name: Train model
        env:
          STUDIO_ENDPOINT: ${{ secrets.STUDIO_ENDPOINT }}
          STUDIO_REPO_URL: ${{ secrets.STUDIO_REPO_URL }}
          STUDIO_TOKEN: ${{ secrets.STUDIO_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DVCLIVE_LOGLEVEL: ${{ secrets.DVCLIVE_LOGLEVEL }}
        run: dvc repro

      - name: Update CML PR
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx cml pr --rebase "dvc.lock" "params.yaml" "dvclive"
