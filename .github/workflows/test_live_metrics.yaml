name: Model training with Live Metrics in Studio
on:
  workflow_dispatch:
  pull_request:
jobs:
  train:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - id: setup_python
        name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - id: python_cache
        name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ steps.setup_python.outputs.python-version }}-
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        if: steps.python_cache.outputs.cache-hit != 'true'
        run: pip install --upgrade --upgrade-strategy eager -r requirements.txt

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install Node.js dependencies
        run: npm ci

      - name: Train model
        env:
          STUDIO_ENDPOINT: ${{ secrets.STUDIO_ENDPOINT }}
          STUDIO_REPO_URL: ${{ secrets.STUDIO_REPO_URL }}
          STUDIO_TOKEN: ${{ secrets.STUDIO_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DVCLIVE_LOGLEVEL: ${{ secrets.DVCLIVE_LOGLEVEL }}
        run: dvc repro

      - name: Update CML PR
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx cml pr --rebase "dvc.lock" "params.yaml" "dvclive"
